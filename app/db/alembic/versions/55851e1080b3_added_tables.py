"""added tables

Revision ID: 55851e1080b3
Revises: 
Create Date: 2024-03-05 17:49:39.179211

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '55851e1080b3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection',
    sa.Column('opensea_slug', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('owner', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('is_nsfw', sa.Boolean(), nullable=False),
    sa.Column('opensea_url', sa.String(), nullable=True),
    sa.Column('project_url', sa.String(), nullable=True),
    sa.Column('wiki_url', sa.String(), nullable=True),
    sa.Column('discord_url', sa.String(), nullable=True),
    sa.Column('telegram_url', sa.String(), nullable=True),
    sa.Column('twitter_url', sa.String(), nullable=True),
    sa.Column('instagram_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('opensea_slug')
    )
    op.create_table('erc20_transfers',
    sa.Column('buyer', sa.String(), nullable=False),
    sa.Column('seller', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.Column('transaction_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_hash')
    )
    op.create_table('nft_listing',
    sa.Column('transaction_hash', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('buyer', sa.String(), nullable=False),
    sa.Column('seller', sa.String(), nullable=False),
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('price_val', sa.String(), nullable=False),
    sa.Column('price_currnecy', sa.String(), nullable=False),
    sa.Column('price_symbol', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('event_timestamp', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_hash')
    )
    op.create_table('nft_ownership',
    sa.Column('buyer', sa.String(), nullable=False),
    sa.Column('seller', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('transaction_hash', sa.String(), nullable=False),
    sa.Column('buy_time', sa.DateTime(), nullable=False),
    sa.Column('sell_time', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_hash')
    )
    op.create_table('nft_sale',
    sa.Column('transaction_hash', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('buyer', sa.String(), nullable=False),
    sa.Column('seller', sa.String(), nullable=False),
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('price_val', sa.String(), nullable=False),
    sa.Column('price_currnecy', sa.String(), nullable=False),
    sa.Column('price_symbol', sa.String(), nullable=False),
    sa.Column('event_timestamp', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_hash')
    )
    op.create_table('nft_transfer',
    sa.Column('transaction_hash', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('buyer', sa.String(), nullable=False),
    sa.Column('seller', sa.String(), nullable=False),
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('price_val', sa.String(), nullable=False),
    sa.Column('price_currnecy', sa.String(), nullable=False),
    sa.Column('price_symbol', sa.String(), nullable=False),
    sa.Column('event_timestamp', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('transaction_hash')
    )
    op.create_table('token_price',
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('eth_price', sa.Float(), nullable=False),
    sa.Column('usdt_price', sa.Float(), nullable=False),
    sa.Column('usdt_conversion_price', sa.Float(), nullable=True),
    sa.Column('eth_conversion_price', sa.Float(), nullable=True),
    sa.Column('event_timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('contract_address', 'event_timestamp')
    )
    op.create_table('collection_dynamic',
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('total_average_price', sa.Float(), nullable=False),
    sa.Column('total_supply', sa.Float(), nullable=False),
    sa.Column('total_volume', sa.Float(), nullable=False),
    sa.Column('total_num_owners', sa.Integer(), nullable=False),
    sa.Column('total_sales', sa.Float(), nullable=False),
    sa.Column('total_market_cap', sa.Float(), nullable=False),
    sa.Column('sales', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('floor_price', sa.Float(), nullable=False),
    sa.Column('floor_price_currency', sa.String(), nullable=False),
    sa.Column('average_price', sa.Float(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['collection_slug'], ['collection.opensea_slug'], ),
    sa.PrimaryKeyConstraint('collection_slug', 'event_timestamp')
    )
    op.create_table('contract',
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('chain', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['collection_slug'], ['collection.opensea_slug'], ),
    sa.PrimaryKeyConstraint('contract_address')
    )
    op.create_table('fee',
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('fee', sa.Float(), nullable=False),
    sa.Column('recipient', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['collection_slug'], ['collection.opensea_slug'], ),
    sa.PrimaryKeyConstraint('collection_slug')
    )
    op.create_table('nft',
    sa.Column('opensea_slug', sa.String(), nullable=False),
    sa.Column('token_id', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('token_standard', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('descp', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('metadata_url', sa.String(), nullable=False),
    sa.Column('opensea_url', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_nsfw', sa.Boolean(), nullable=False),
    sa.Column('is_disabled', sa.Boolean(), nullable=False),
    sa.Column('traits', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['opensea_slug'], ['collection.opensea_slug'], ),
    sa.PrimaryKeyConstraint('token_id', 'contract_address')
    )
    op.create_table('payment_tokens',
    sa.Column('collection_slug', sa.String(), nullable=False),
    sa.Column('contract_address', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('decimals', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['collection_slug'], ['collection.opensea_slug'], ),
    sa.PrimaryKeyConstraint('collection_slug', 'contract_address')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment_tokens')
    op.drop_table('nft')
    op.drop_table('fee')
    op.drop_table('contract')
    op.drop_table('collection_dynamic')
    op.drop_table('token_price')
    op.drop_table('nft_transfer')
    op.drop_table('nft_sale')
    op.drop_table('nft_ownership')
    op.drop_table('nft_listing')
    op.drop_table('erc20_transfers')
    op.drop_table('collection')
    # ### end Alembic commands ###
